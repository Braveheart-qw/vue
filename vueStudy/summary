vue的学习
    1.什么是vue？
    答：是一套构建用户界面得渐进式框架，

        特点：
        自底向上框架
        vue的核心库只关注视图层，易于上手
        配合现代化的工具链以及各种类库的支持，也可以实现复杂的单页应用提供驱动

    2.安装
        2.1 可以将vue下载到本地

        2.2 使用cnd引入vue(同bootstrap的cnd 引入相同)

    3.使用
        vue的模板语法
            3.1 插值：
                vue实例化，并且可以渲染变量值，实例化之后，插值里面的区域会被当成js代码对待，也就是{{}}区域，见vue 3_1.html

            3.2 指令:
                如果我想在网页渲染标签，在插值区域无法被直接渲染，需要使用v-html指令，然后通过data对象里面 渲染成想要的标签，为什么
                vue的作者不直接渲染标签，而要使用v-html指令，因为需要防止别人的恶意注入，v-html指令可以做到必须是自己信任的标签渲染，在可以成功渲染到
                网页,见3_2.html

            3.3 绑定：
                通过vue提供的绑定 来实现class 和 style 的动态添加 见3_3.html
                【注】在class 和 style的 对象方法中存在一个共同的问题，后续对对象的操作都无法生效，为什么会无法生效，在3.7中有解释，因为无法被vue检测，导致视图不更新，
                    解决方案 3.7中的方法2，


            3.4 条件渲染和循环遍历
                v-if 和 v-else 同 if 和 else功能相同， v-for 同 for功能相同

            3.5 列表渲染
                通过v-for来实现动态增加减少列表中的内容
                【注】v-for 遍历数组 如： v-for="data in datalist"  datalist是数组名  如果想获取数组下标写法应该是 v-for = "(data,index) in datalist "
                     v-for 遍历对象 如： v-for="data in obj"        obj 是对象名      如果想获取对象的key值，   v-for = "(data,key) in obj"
                     将in 改成of 也是可以的，和js相同

            3.6 在3.5的列表渲染中需要注意应该在循环语句后面添加key值，并将key设置成每项都有并且是唯一的id,如v-for="data in datalist"  key="data.id"
                问题：为什么要设置key值？
                             key值的特点:
                                    1.跟踪每个节点得身份，从而重用和重新排序现有元素
                                    2.理想得key值是每项都有并且是唯一的id，如data.id

            3.7 列表数组检测
                    源数组改变，vue视图将会更新(被vue检测)
                    原数组没有改变，将不会更新(无法被vue检测)
                    【注意】改变下标对应的值，虽然也对源数组产生了改变，但是vue视图并不会更新(无法被vue检测)，如果我们必须改变对应下标的值，我们有如下解决方案
                            1.使用splice;
                            2.使用Vue.set(参数1，index , 参数3)
                                参数1： 数组名 或者 对象名
                                index：下标 或者 key
                                参数3：替换的值

            3.8 列表过滤        (小技巧知识点，模糊查询)
                做一个搜索框下拉列表的功能
                用到的知识点 @input 事件，@input 每次改变都会触发事件
                双向绑定 v-model ，具体使用 如：v-model="mytext"  ，这时候vue实例化里面的mytext随着input标签里面的text值变化





