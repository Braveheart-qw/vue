
    vue第二阶段
          4.1 vue的虚拟dom，新节点和旧节点 通过diff算法进行对比
                对比方式：1.同层次对比
                     2.同key值对比
                     3.同组件对比

          4.2 vue组件
                什么是组件？
                答：函数是将相同功能封装在一起，而组件就是将相同的页面封装起来，可以复用，就是组件
                    vue组件的使用模板：见4_2.html
                    【总结】一个完整的组件应该 具有js逻辑代码(方法),样式(css代码),dom结构(标签做成的页面)
                    组件类型：根组件(父组件)
                             子组件
                             兄弟组件


          4.3 组件和实例的区别
                                  1.自定义组件中有多个兄弟结点时，需要有一个父节点将他们包裹
                                  2.父子组件的数据不可以直接共享，可以通过某一种方式来达成数据交换
                                  3.子组件的data 需要写成函数形式


          4.4 父子组件数据共享问题
                1.父传子 见4_4.html
                    需要注意得知识点-属性验证，

                2.子传父 见4_4_2.html
                    主要注意的是，在自定义的事件中，所绑定的父组件方法，可以不带括号，会自动带着$event调用父组件的方法，带括号，就要手动添加参数$event

          4.5 非父子组件数据共享问题
                见4_5.html
                知识点：ref
                      ref 的基本用法：ref放在标签上，我们就可以从vue的实例里面拿到关于rel的原生dom节点
                      ref 的高级用法：ref放在组件是，我们就可以拿到组件对象

                回归正题，如何实现非父子组件数据共享，使用中央事件总线(var bus = new Vue()) 见(4_52.html)
                知识点：
                    监听(bus.$on("监听的事件名称",()>{
                        事件处理
                    }))

                    推送(bus.$emit("推送的自定义名称，也就是监听事件所要监听的事件"))

                    生命周期 (初始化周期mounted(){
                        程序一运行就会执行该周期里的函数代码
                    })

          4.6 动态组件
            <component>元素将多个组件绑定到is属性上，is属性值是谁的组件名，这个component就会显示对应的组件
            <keep-alive>这个属性可以让页面不销毁，也就是状态不从内存中删除





